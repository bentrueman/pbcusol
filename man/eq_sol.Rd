% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/eq_sol.R
\name{eq_sol}
\alias{eq_sol}
\alias{pb_sol}
\alias{cu_sol}
\title{Calculate equilibrium solubility on a grid of input values}
\usage{
eq_sol(
  ph,
  dic,
  chloride = 0,
  sulfate = 0,
  phosphate = 0,
  phase,
  element,
  db = pbcu2sol,
  empirical = FALSE,
  print = NULL,
  ...
)

pb_sol(..., element = "Pb")

cu_sol(..., element = "Cu")
}
\arguments{
\item{ph}{A vector of pH values.}

\item{dic}{A vector of dissolved inorganic carbon (DIC) concentrations, in mg C/L.}

\item{chloride}{A vector of chloride concentrations, in  mg/L.}

\item{sulfate}{A vector of sulfate concentrations, in mg SO4/L.}

\item{phosphate}{A vector of orthophosphate concentrations, in mg P/L.}

\item{phase}{Equilibrium phase.}

\item{element}{An element to return the equilibrium concentration of.}

\item{db}{The database to use for equilibrium solubility computations. The default is \code{pbcusol:::pbcu2sol}}

\item{empirical}{Logical. Predict equilibrium copper solubility using the empirical model due to
Lytle et al. \url{https://doi.org/10.1002/awwa.1109}?}

\item{print}{Choose whether to print the input file ("input"), the full output ("output"), or the selected output.
Default is the latter.}

\item{...}{Arguments passed on to \code{phr_solution_list()}}
}
\value{
A tibble with the input grid of pH and DIC values and the solubilty predictions.
}
\description{
Calculate equilibrium solubility on a grid of input values
}
\section{Functions}{
\itemize{
\item \code{pb_sol}: Shorthand for \code{eq_sol()} with \code{element = "Pb"}. For backwards compatibility.

\item \code{cu_sol}: Shorthand for \code{eq_sol()} with \code{element = "Cu"}. For backwards compatibility.
}}

\examples{
eq_sol(element = "Pb", ph = 7.5, dic = 5, phase = "Cerussite")
eq_sol(element = "Pb", ph = 7.5, dic = 5, db = phreeqc::minteq.v4.dat, phase = "Cerussite")
eq_sol(element = "Cu", ph = 7.5, dic = 5, phase = "Tenorite")
eq_sol(element = "Cu", ph = 7.5, dic = 5, db = phreeqc::minteq.v4.dat, phase = "Tenorite")
eq_sol(element = "Cu", 7.5, 5, phosphate = 1, empirical = TRUE)
}
